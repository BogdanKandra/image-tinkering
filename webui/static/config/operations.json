{
  "Blur (Frequency Domain)": {
    "function": "filtering.frequency.low_pass",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "cutoff",
        "type": "range",
        "minimum": 1,
        "maximum": 100,
        "description": "The cutoff frequency, as a percentage from the maximum dimension of the input image"
      },
      {
        "name": "type",
        "type": "lookup",
        "values": ["ideal", "butterworth", "gaussian"],
        "presenceDependencies": ["order"],
        "presenceConditions": ["==butterworth"],
        "description": "The type of filter to be used for filtering the input image"
      },
      {
        "name": "order",
        "type": "range",
        "minimum": 0,
        "maximum": 10,
        "default": 2,
        "description": "Describes the smoothness of the generated filter; lower values mean smoother filter"
      }
    ],
    "description": "Blurs an image using the FFT"
  },
  "Sharpen (Frequency Domain)": {
    "function": "filtering.frequency.high_pass",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "cutoff",
        "type": "range",
        "minimum": 1,
        "maximum": 100,
        "description": "The cutoff frequency, as a percentage from the maximum dimension of the input image"
      },
      {
        "name": "offset",
        "type": "range",
        "minimum": 0,
        "maximum": 255,
        "default": 0,
        "description": "Value used for avoiding the reduction of the DC term to 0"
      },
      {
        "name": "multiplier",
        "type": "range",
        "minimum": 1,
        "maximum": 10,
        "default": 1,
        "description": "Value used for emphasizing edges"
      },
      {
        "name": "type",
        "type": "lookup",
        "values": ["ideal", "butterworth", "gaussian"],
        "presenceDependencies": ["order"],
        "presenceConditions": ["==butterworth"],
        "description": "The type of filter to be used for filtering the input image"
      },
      {
        "name": "order",
        "type": "range",
        "minimum": 0,
        "maximum": 10,
        "default": 2,
        "description": "Describes the smoothness of the generated filter; lower values mean smoother filter"
      }
    ],
    "description": "Sharpens an image using the FFT"
  },
  "Negative": {
    "function": "filtering.spatial.negative",
    "type": "one-to-one",
    "parameters": []
  },
  "Grayscale": {
    "function": "filtering.spatial.grayscale",
    "type": "one-to-one",
    "parameters": []
  },
  "Sepia": {
    "function": "filtering.spatial.sepia",
    "type": "one-to-one",
    "parameters": []
  },
  "Binarize": {
    "function": "filtering.spatial.binarize",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "thresholding_Method",
        "type": "lookup",
        "values": ["simple", "adaptive"],
        "presenceDependencies": ["threshold", "adaptive_Method", "neighbourhood_Size"],
        "presenceConditions": ["==simple", "==adaptive", "==adaptive"],
        "description": "Specifies whether the threshold is computed automatically or specified by the user"
      },
      {
        "name": "threshold",
        "type": "lookup",
        "values": ["median", "127"],
        "default": "median",
        "description": "The value which separates the two pixel values"
      },
      {
        "name": "maximum_Value",
        "type": "range",
        "minimum": 1,
        "maximum": 255,
        "default": 255,
        "description": "The value with which to replace pixel values greater than the threshold"
      },
      {
        "name": "adaptive_Method",
        "type": "lookup",
        "values": ["mean", "gaussian"],
        "default": "gaussian",
        "description": "Describes how the thresholds are computed"
      },
      {
        "name": "neighbourhood_Size",
        "type": "lookup",
        "values": [5, 9, 15],
        "default": 15,
        "description": "Specifies the size of the square from which to consider values when computing thresholds"
      }
    ]
  },
  "Blur (Spatial Domain)": {
    "function": "filtering.spatial.blur",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "type",
        "type": "lookup",
        "values": ["box", "gaussian"],
        "default": "gaussian",
        "description": "The type of kernel to be used"
      },
      {
        "name": "strength",
        "type": "lookup",
        "values": ["weak", "medium", "strong"],
        "description": "The strength of the blur effect"
      }
    ]
  },
  "Sharpen (Spatial Domain)": {
    "function": "filtering.spatial.sharpen",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "type",
        "type": "lookup",
        "values": ["box", "gaussian"],
        "default": "gaussian",
        "description": "The type of kernel to be used"
      },
      {
        "name": "strength",
        "type": "lookup",
        "values": ["weak", "medium", "strong"],
        "description": "The strength of the blur effect"
      }
    ]
  },
  "ASCII Art": {
    "function": "filtering.spatial.ascii_art",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "charset",
        "type": "lookup",
        "values": ["standard", "alternate", "full"],
        "default": "alternate",
        "description": "The set of characters to be used when rendering the ASCII image"
      }
    ]
  },
  "Edge Detection": {
    "function": "filtering.spatial.edge",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "method",
        "type": "lookup",
        "values": ["laplacian", "gradient", "non-max suppression", "canny"],
        "presenceDependencies": ["pre-Blur", "edge_Count"],
        "presenceConditions": ["==laplacian", "==canny"],
        "description": "The edge detection algorithm to be applied"
      },
      {
        "name": "pre-Blur",
        "type": "lookup",
        "values": ["yes", "no"],
        "default": "yes",
        "description": "Whether to blur the input image before convolving with the laplacian kernel; the result will have less noise but lesser edges"
      },
      {
        "name": "edge_Count",
        "type": "lookup",
        "values": ["standard", "many"],
        "default" : "standard",
        "description": "How many edges will be considered strong in the Double Thresholding step"
      }
    ]
  },
  "Flip": {
    "function": "geometric.axes.flip",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "axis",
        "type": "lookup",
        "values": ["horizontal", "vertical", "both"],
        "default": "horizontal",
        "description": "The axis along which to flip the image"
      }
    ]
  },
  "Mirror": {
    "function": "geometric.axes.mirror",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "axis/location",
        "type": "lookup",
        "values": ["horizontal/left", "horizontal/right", "vertical/top", "vertical/bottom", "both/left/top", "both/left/bottom", "both/right/top", "both/right/bottom"],
        "default": "horizontal/right",
        "description": "The axis along which to flip the image and the location(s) relative to the input image where the flipped image should be pasted"
      }
    ]
  },
  "Split into Channels": {
    "function": "miscellaneous.channels.split_channels",
    "type": "one-to-many",
    "parameters": [
      {
        "name": "spectrum",
        "type": "lookup",
        "values": ["grayscale", "color"],
        "default": "color",
        "description": "The spectrum in which the channels will be represented"
      }
    ]
  },
  "Remove Channels": {
    "function": "miscellaneous.channels.remove_channels",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "channel(s)",
        "type": "lookup",
        "values": ["red", "green", "blue", "red & green", "red & blue", "green & blue"],
        "description": "The channel(s) to be removed from the image"
      }
    ]
  },
  "Shuffle": {
    "function": "miscellaneous.shuffle.shuffle",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "criterion",
        "type": "lookup",
        "values": ["channels", "lines", "columns", "pixels"],
        "default": "channels",
        "description": "The criterion to shuffle the image data by"
      }
    ]
  },
  "Photomosaic": {
    "function": "miscellaneous.lego.photomosaic",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "technique",
        "type": "lookup",
        "values": ["original", "alternative"],
        "presenceDependencies": ["transparency"],
        "presenceConditions": ["==alternative"],
        "description": "The technique used when building the photomosaic"
      },
      {
        "name": "transparency",
        "type": "lookup",
        "values": ["low", "medium", "high"],
        "default": "high",
        "description": "The level of transparency of the mosaic image"
      },
      {
        "name": "resolution",
        "type": "lookup",
        "values": ["low", "standard", "high"],
        "default": "standard",
        "description": "The size of the tiles used when building the mosaic"
      },
      {
        "name": "redundancy",
        "type": "lookup",
        "values": ["allowed", "not allowed"],
        "default": "allowed",
        "description": "Whether or not to allow the same tile to be repeated for neighbours"
      }
    ]
  },
  "Pixelate": {
    "function": "miscellaneous.lego.pixelate",
    "type": "one-to-one",
    "parameters": [
      {
        "name": "fidelity",
        "type": "lookup",
        "values": ["very low", "low", "standard", "high", "very high"],
        "default": "standard",
        "description": "How close the resulting image will look compared to the original (inverse proportional to the size of the composing pixels)"
      }
    ]
  },
  "Visible Watermark": {
    "function": "watermarking.spatial.visible_watermark",
    "type": "many-to-one",
    "extraInputsNames": ["Watermark"],
    "parameters": [
      {
        "name": "transparency",
        "type": "lookup",
        "values": ["very transparent", "transparent", "opaque"],
        "default": "transparent",
        "description": "The degree of transparency of the watermark image when overlayed on the host image"
      },
      {
        "name": "location",
        "type": "lookup",
        "values": ["top left", "top right", "bottom left", "bottom right", "center", "everywhere"],
        "default": "bottom right",
        "description": "The location of the watermark image"
      },
      {
        "name": "size",
        "type": "range",
        "minimum": 10,
        "maximum": 90,
        "step": 10,
        "default": 20,
        "description": "The maximum width of the watermark image, as a percentage of the width of the host image"
      }
    ]
  }
}