Modul Imagini (default):
=============================
- Rezultatul / rezultatele sunt salvate intr-un director temp si prezentate clientului. Daca clientul vrea sa salveze, alege un nume si salveaza. Imaginile vor fi salvate in directorul "outputs"
- Buton "Perform Operation" care deschide un modal cu operatiile posibile pe imagini
	- Butonul "Run" trimite un request la server cu lista de operatii, iar serverul va aplica succesiv operatiile din lista, producand un output
		- Serverul are o ruta gen 'process/op1#op2#opn' care preia operatiile si le aplica succesiv pe imagine(ile) de input si trimite lista de output-uri
	- Outputul este trimis la client, pentru vizualizare, avand apoi doua optiuni:
	"Save" si "Discard". "Discard" sterge din memorie output-ul operatiilor si revine la modalul de selectie. "Save" deschide fereastra de salvare fisier pe disc. Dupa oricare dintre aceste operatii, se inchide modalul.



- Ajax call properties: url, method, data, success, error, dataType (processData, contentType)
- python os functions:
	- os.access() -- determina daca user-ul are drepturi asupra path-ului
	- os.chdir()  -- schimba cwd-ul pe path-ul dat
	- os.getcwd() -- intoarce calea absoluta a directorului curent



- Voi avea module care fac anumite operatii;
- Fiecare modul are functii de procesare care iau ca argument o imagine si alti parametrii;
- Ca sa aplic o functie asupra unei imagini, trebuie sa:
	- Import dinamic modulul in care se afla functia; (modulul corect e dedus pe baza unui json de configurare);
	- Apelez modul.functie;
- Ca sa adaug o operatie noua in proiect, trebuie sa:
	- Adaug o intrare in json-ul de mapare intre nume de operatii si modulul in care se afla
	- Sa creez un modul nou in care sa pun functia sau sa o pun intr-un modul existent
	- Sa adaptez interfata web pentru ea, acolo unde e necesar

